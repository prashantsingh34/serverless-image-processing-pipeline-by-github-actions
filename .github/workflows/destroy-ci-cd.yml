name: Terraform Destroy for dev workflows
on:
  pull_request:
    types: [closed]
    branches:
      - main
env:
  TF_DIR: ./terraform
  BUCKET_NAME: ${{ vars.bucket }}

jobs:
  terraform-destroy:
    environment: dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials(OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::980069008226:role/github_actions_OIDC_role
          aws-region: us-east-1
      
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set TF_VAR_env
        run:  echo "TF_VAR_env=$BRANCH_NAME" >> $GITHUB_ENV

        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          BRANCH_NAME: ${{ github.head_ref }}

          
      - name: Terraform init
        run: terraform init -backend-config="bucket=$BUCKET_NAME" -backend-config="key=terraform/${TF_VAR_env}/terraform.tfstate"
        working-directory: ${{ env.TF_DIR }}

      - name: Get existing Lambda layer ARN
        id: get_current_arn
        run: |
          ARN=$(aws lambda list-layer-versions \
          --layer-name dependency_layer \
          --query 'LayerVersions[?LayerVersionArn!=`null`].[LayerVersionArn]' \
          --output text | head -n 1 | xargs)
          echo "TF_VAR_layer_arn=$ARN" >> $GITHUB_ENV
          echo $ARN 
          
      - name: Terraform apply
        run: terraform destroy -auto-approve
        working-directory: ${{ env.TF_DIR }}
